node{
    withEnv([
        "branch=${env.branch}",
        "IS_OFFICIAL_RELEASE=false",
        "date=current",
        "timezone=-0500",
        "OS_VER=${env.OS_VER}",
        "TFTP_STATIC_FILES=${env.TFTP_STATIC_FILES}",
        "HTTP_STATIC_FILES=${env.HTTP_STATIC_FILES}",
        "USE_VCOMPUTE=${env.USE_VCOMPUTE}",
        "TESTS=${env.TESTS}",
        "OVA_POST_TESTS=${env.OVA_POST_TESTS}",
        "BINTRAY_SUBJECT=${env.BINTRAY_SUBJECT}",
        "CI_BINTRAY_SUBJECT=${env.CI_BINTRAY_SUBJECT}",
        "PUBLISH=${env.PUBLISH}"
    ]){
        deleteDir()
        checkout scm
        def shareMethod = load("jobs/ShareMethod.groovy")
        try{
            stage("Create Manifest"){
                load("jobs/create_manifest/create_manifest.groovy")
            }
            def manifest_name=env.MANIFEST_FILE_URL.tokenize('/')[-1];
            currentBuild.description = "<a href=${env.MANIFEST_FILE_URL}>${manifest_name}</a>";
 
            shareMethod.downloadManifest(env.MANIFEST_FILE_URL, manifest_name)

            stash name: "masterci_manifest", includes: "${manifest_name}"
            env.stash_manifest_name = "masterci_manifest"
            env.stash_manifest_path = "${manifest_name}"

            def repo_dir = pwd()
            def TESTS = "${env.TESTS}"
            def test_type = "manifest"

            Boolean create_tag = false
            // Boolean publish = PUBLISH.toBoolean()
            Boolean publish = false
            shareMethod.buildAndPublish(publish, create_tag, repo_dir)
        } finally{
            shareMethod.sendResult(false, false)
        }
    }
}
